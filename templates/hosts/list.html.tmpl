{{define "second-navbar"}}
<nav class="navbar navbar-default">
    <div class="container">
        <div class="form-group form-group-search-and-save">
            <form class="navbar-form navbar-left search-form" role="search" action="/">
                <div class="input-group">
                    <input id="search-input" name="q" type="text" class="form-control" placeholder="Press enter to search">
                </div>
            </form>

            <form class="navbar-form navbar-left saved-queries-form" action="/saved-queries" method="post">
                <input id="saved-queries-input" name="SavedQuery" type="hidden">

                <div class="input-group">
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-primary">Save Query</button>
                    </span>
                </div>
            </form>
        </div>
    </div>
</nav>

<script>
$(window).load(function() {
    var key = "q";
    var value = "";
    var sPageURL = window.location.search.substring(1);
    var sURLVariables = sPageURL.split('&');

    for (var i = 0; i < sURLVariables.length; i++) {
        var sParameterName = sURLVariables[i].split('=');
        if (sParameterName[0] == key) {
            value = sParameterName[1];
        }
    }

    value = value.replace(/\+/g, " ");

    if(value != "") {
        $('[name="q"]').val(decodeURIComponent(value));
    }

    // On load, cp search input to saved-queries input.
    $('#saved-queries-input').val($('#search-input').val());
});

// This catches keyup, onchange, and paste events.
// cp search input to saved-queries input
$('#search-input').bind("input propertychange", function(e) {
    $('#saved-queries-input').val($(this).val());
});
</script>
{{ end }}

{{define "content"}}
<!-- Saved Queries -->
<div class="container saved-queries">
    <div class="row">
        <div class="col-lg-12">
            <div class="page-header">
                <div class="pull-right">
                    <small class="updated-queries-toggle">Show All</small>
                    <input type="checkbox" class="toggler toggler-header pull-right" data-size="mini">
                </div>

                <h2>Saved Queries</h2>
            </div>
        </div>
    </div>

    {{ range $i, $savedQuery := .SavedQueries }}
    <div class="row saved-queries" style="{{ if lt $i 5 }}display: block{{ else }}display: none{{ end }}">
        <div class="col-xs-12 col-lg-12">
            <div>
                <div class="pull-right">
                    <a href="?q={{ $savedQuery.Query }}" type="submit" class="btn btn-default">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    </a>

                    <a href="//{{ $.AccessToken.Token }}:@{{ $.Addr }}/api/hosts?q={{ $savedQuery.Query }}" type="submit" class="btn btn-success">
                       JSON
                    </a>

                    <form action="/saved-queries/{{ $savedQuery.ID }}" method="post" onsubmit="return confirm('Are you sure you want to delete?');">
                        <input type="hidden" name="_method" value="delete">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>

                <h3>{{ $savedQuery.Query }}</h3>
            </div>
        </div>
    </div>
    {{ end }}
</div>

<!-- Hosts -->
<div class="container hosts">
    <div class="row">
        <div class="col-lg-12">
            <div class="page-header">
                <h2>Hosts</h2>
            </div>
        </div>
    </div>

    {{ range $host := .Hosts }}
    <div class="row hosts">
        <div class="col-xs-12 col-lg-12">
            <div>
                <div class="pull-right">
                    <small class="updated-timestamp">{{ $host.Updated }}</small>
                    <input type="checkbox" class="toggler toggler-header pull-right" data-size="mini">
                </div>

                <h3>{{ $host.Name }}</h3>
            </div>

            {{ range $tag := $host.StringTags }}
            <span class="label label-primary">{{ $tag }}</span>
            {{ end }}

            <div class="details" style="display: none">
                {{ range $path, $data := $host.DataAsFlatKeyValue }}
                <div class="detail-header" data-path="{{ $path }}">
                    <div class="pull-right">
                        <input type="checkbox" class="toggler toggler-body pull-right" data-size="mini" checked>
                    </div>

                    <h4>{{ $path }}</h4>
                </div>

                <div class="detail-body table-responsive table-condensed" data-path="{{ $path }}">
                    <table class="table table-striped">
                        <thead></thead>
                        <tbody>
                            {{ range $key, $value := $data }}
                            <tr>
                                <td>{{ $key }}</td>
                                <td>{{ $value }}</td>
                                <td class="graph-column-btn">
                                    <div class="btn-group" role="group">
                                        {{ if (ne 0 (index $.MetricsMap (print $path "." $key))) }}
                                        <button class="btn btn-success btn-sm active" data-toggle="modal" data-target="#graph-modal"
                                            data-metric-id="{{ index $.MetricsMap (print $path "." $key) }}"
                                            data-host="{{ $host.Name }}">
                                            <span class="glyphicon glyphicon-stats" aria-hidden="true"></span>
                                        </button>

                                        {{ else }}
                                        <form action="/clusters/{{ $host.ClusterID }}/metrics" method="post">
                                            <input type="hidden" name="Key" value="{{ $path }}.{{ $key }}">
                                            <button type="submit" class="btn btn-success btn-sm">Graph Metric?</button>
                                        </form>
                                        {{ end }}
                                    </div>
                                </td>
                            </tr>
                            {{ end }}
                        </tbody>
                    </table>
                </div>
                {{ end }}
            </div>

        </div>
    </div>
    {{ end }}
</div>

<!-- Graph Modal -->
<div class="modal fade" id="graph-modal" tabindex="-1" role="dialog" aria-labelledby="graph-label" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="graph-label">Graph</h4>
            </div>

            <form method="post" action="/graphs">
                <input type="hidden" name="_method" value="post">

                <div class="modal-body">
                    <div class="graph-modal-container"></div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
$(document).ready(function() {
    $('.toggler').bootstrapSwitch();

    // Show all saved-queries if toggler is set to on.
    $('.container.saved-queries .toggler-header').each(function() {
        var state = $.cookie('.container.saved-queries .toggler-header');

        if (state && state == 'true') {
            $(this).bootstrapSwitch('state', true, true);
            $(this).closest('.container.saved-queries').find('.row.saved-queries').show();
        }
    });
});

$('.container.saved-queries .toggler-header').on('switchChange.bootstrapSwitch', function(event, state) {
    if(state) {
        $(this).closest('.container.saved-queries').find('.row.saved-queries').show();
    } else {
        $(this).closest('.container.saved-queries').find('.row.saved-queries:gt(4)').hide();
    }

    // Set state in cookie
    $.cookie('.container.saved-queries .toggler-header', state, {
        path: '/',
        expires: 365
    });
});

$('.row.hosts .toggler-header').on('switchChange.bootstrapSwitch', function(event, state) {
    $(this).closest('.hosts').find('.details').toggle();
});

$('.row.hosts .toggler-body').on('switchChange.bootstrapSwitch', function(event, state) {
    var $detailHeader = $(this).closest('.detail-header');
    var path = $detailHeader.data('path');
    $detailHeader.siblings('.detail-body[data-path="' + path + '"]').toggle();
});

$('#graph-modal').on('shown.bs.modal', function() {
    var modal = $(this);
    modal.find('.graph-modal-container').css('visibility', 'initial');

    var containerDOM = modal.find('.graph-modal-container');
    containerDOM.highcharts().reflow();
});

$('#graph-modal').on('show.bs.modal', function (event) {
    var button = $(event.relatedTarget);   // Button that triggered the modal
    var metricId = button.data('metric-id');
    var host = button.data('host');
    var modal = $(this);

    var containerDOM = modal.find('.graph-modal-container');
    containerDOM.css('visibility', 'hidden');

    $.ajax({
        url: "/api/metrics/" + metricId + "/hosts/" + host,
        beforeSend: function(xhr) {
            xhr.setRequestHeader("Authorization", "Basic " + window.btoa("{{ $.AccessToken.Token }}:"));
        },
        success: function(result) {
            containerDOM.highcharts({
                chart: {
                    margin: 0,
                    type: 'spline',
                    animation: Highcharts.svg, // don't animate in old IE
                },
                xAxis: {
                    type: 'datetime',
                    dateTimeLabelFormats: { // don't display the dummy year
                        month: '%e. %b',
                        year: '%b'
                    },
                    title: {
                        text: 'Date'
                    }
                },
                yAxis: {
                    title: {
                        text: 'Snow depth (m)'
                    },
                    min: 0
                },
                tooltip: {
                    // headerFormat: '<b>{series.name}</b><br>',
                    // pointFormat: '{point.x:%e. %b}: {point.y:.2f} m',
                    shared: true,
                    crosshairs: true
                },
                exporting: {
                    enabled: false
                },
                plotOptions: {
                    spline: {
                        marker: {
                            enabled: true
                        }
                    }
                },

                series: [result]
            });
        }
    });
});
</script>
{{end}}