{{define "second-navbar"}}
<nav class="navbar navbar-default hosts">
    <div class="container">
        <div class="form-group">
            <form class="navbar-form" role="search" action="/">
                <input id="search-input" name="q" type="text" class="form-control" placeholder="Press enter to search">
            </form>
        </div>
    </div>
</nav>

<script>
$(window).load(function() {
    var key = "q";
    var value = "";
    var sPageURL = window.location.search.substring(1);
    var sURLVariables = sPageURL.split('&');

    for (var i = 0; i < sURLVariables.length; i++) {
        var sParameterName = sURLVariables[i].split('=');
        if (sParameterName[0] == key) {
            value = sParameterName[1];
        }
    }

    value = value.replace(/\+/g, " ");

    if(value != "") {
        $('[name="q"]').val(decodeURIComponent(value));
    }

    // On load, cp search input to saved-queries input.
    $('#saved-queries-input').val($('#search-input').val());
});

// This catches keyup, onchange, and paste events.
// cp search input to saved-queries input
$('#search-input').bind("input propertychange", function(e) {
    $('#saved-queries-input').val($(this).val());
});
</script>
{{ end }}

{{define "content"}}
<!-- Saved Queries -->
<div class="container saved-queries">
    <div class="row">
        <div class="col-lg-12">
            <div class="page-header">
                <div class="pull-right">
                    <small class="updated-queries-toggle">Show All</small>
                    <input type="checkbox" class="toggler toggler-header pull-right" data-size="mini">
                </div>

                <h2>Saved Queries</h2>
            </div>
        </div>
    </div>

    {{ range $i, $savedQuery := .SavedQueries }}
    <div class="row saved-queries" style="{{ if lt $i 5 }}display: block{{ else }}display: none{{ end }}">
        <div class="col-xs-12 col-lg-12">
            <div>
                <div class="pull-right">
                    <a href="?q={{ $savedQuery.Query }}" type="submit" class="btn btn-default">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    </a>

                    <a href="//{{ $.AccessToken.Token }}:@{{ $.Addr }}/api/hosts?q={{ $savedQuery.Query }}" type="submit" class="btn btn-success">
                       JSON
                    </a>
                </div>

                <h3>{{ $savedQuery.Query }}</h3>
            </div>
        </div>
    </div>
    {{ end }}
</div>

{{ if eq (len .Hosts) 0 }}
<div class="container" style="margin-top: 40px">
    <div class="jumbotron">
        <h2 style="margin-top: 0">Welcome to ResourceD</h2>
        <p>If you haven't already, configure your agents using access tokens defined <a href="/clusters">here</a>.</p>
    </div>
</div>
{{ else }}
<!-- Hosts -->
<div class="container hosts">
    <div class="row">
        <div class="col-lg-12">
            <div class="page-header">
                <h2>Hosts</h2>
            </div>
        </div>
    </div>

    {{ range $host := .Hosts }}
    <div class="row hosts">
        <div class="col-xs-12 col-lg-12">
            <div>
                <div class="pull-right">
                    <small class="updated-timestamp time-unix-to-local">{{ $host.Updated.Unix }}</small>
                    <a href="/hosts/{{ $host.ID }}" class="btn btn-xs btn-info pull-right">Details</a>
                </div>

                <h3>{{ $host.Hostname }}</h3>
            </div>

            {{ range $tagKey, $tagValue := $host.GetTags }}
            <a class="label label-primary" href="/?q=tags.{{ $tagKey }} %3D {{ $tagValue }}">{{ $tagKey }} : {{ $tagValue }}</a>
            {{ end }}
        </div>
    </div>
    {{ end }}
</div>
{{ end }}

<script>
ResourcedMaster.globals.AccessToken = '{{ $.AccessToken.Token }}';

$(document).ready(function() {
    ResourcedMaster.metrics.get1dayEvents();

    $('.toggler').bootstrapSwitch();

    // Hide Saved Queries container if there are no save queries.
    if($('.row.saved-queries').length == 0) {
        $('.container.saved-queries').hide();
    }

    // Show all saved-queries if toggler is set to on.
    $('.container.saved-queries .toggler-header').each(function() {
        var elem = $(this);

        if($.localStorage.get('UIStore', '.container.saved-queries .toggler-header')) {
            elem.bootstrapSwitch('state', true, true);
            elem.closest('.container.saved-queries').find('.row.saved-queries').show();
        }
    });
});

$('.container.saved-queries .toggler-header').on('switchChange.bootstrapSwitch', function(event, state) {
    if(state) {
        $(this).closest('.container.saved-queries').find('.row.saved-queries').show();
    } else {
        $(this).closest('.container.saved-queries').find('.row.saved-queries:gt(4)').hide();
    }

    $.localStorage.set('UIStore', '.container.saved-queries .toggler-header', state);
});
</script>
{{end}}